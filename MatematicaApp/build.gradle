apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: 'com.google.gms.google-services'  // Google Services Gradle plugin
apply plugin: 'com.google.firebase.crashlytics' // Crashlytics Gradle plugin

android {
    signingConfigs {
        release {
            storeFile file("../../keystore.jks")
            keyAlias "androidappskeystore"
            keyPassword ""
            storePassword ""
        }
    }
    compileSdkVersion 30
    defaultConfig {
        buildToolsVersion "30.0.3"
        applicationId = "com.sergiocruz.MatematicaPro"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 34
        versionName "4.6.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }
    buildTypes {
        all {
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            useProguard true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }
    productFlavors {
    }

    // use Java 8 Lambdas
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError true
        enable 'StopShip'
        error 'StopShip'
    }

}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    testImplementation('junit:junit:4.13.2')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0', {
        exclude group: "com.android.support", module: "support-annotations"
    })

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    implementation project(":xtooltip")

    implementation('com.google.android.material:material:1.3.0')

    // Constraint layout
    implementation("androidx.constraintlayout:constraintlayout:2.0.4")
    implementation("androidx.constraintlayout:constraintlayout-solver:2.0.4")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation("androidx.appcompat:appcompat:1.2.0")
    implementation('androidx.recyclerview:recyclerview:1.2.0')
    implementation("androidx.cardview:cardview:1.0.0")
    implementation("androidx.gridlayout:gridlayout:1.0.0")
    implementation("androidx.vectordrawable:vectordrawable:1.1.0")
    implementation("androidx.preference:preference-ktx:1.1.1")
    implementation("androidx.fragment:fragment-ktx:1.3.2")

    implementation("com.google.android.gms:play-services-location:18.0.0")

    // Timber logging
    implementation("com.jakewharton.timber:timber:4.7.1")

    implementation("com.google.code.gson:gson:2.8.6")

    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation("com.google.firebase:firebase-analytics-ktx")        // Recommended: Firebase SDK for Google Analytics.
    implementation("com.google.firebase:firebase-crashlytics")          // Firebase Crashlytics SDK.

    implementation "com.android.billingclient:billing-ktx:3.0.3"

    // Glide image loading library
    implementation('com.github.bumptech.glide:glide:4.12.0')

    implementation("androidx.multidex:multidex:2.0.1")

    def room_version = '2.2.6'

    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // optional - Test helpers
    testImplementation("androidx.room:room-testing:$room_version")

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3")

    implementation("com.google.android.play:core:1.10.0")

    // For Kotlin users also import the Kotlin extensions library for Play Core:
    implementation("com.google.android.play:core-ktx:1.8.1")

}

repositories {
    mavenCentral()
}