apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: 'com.google.gms.google-services'  // Google Services Gradle plugin
apply plugin: 'com.google.firebase.crashlytics' // Crashlytics Gradle plugin

android {
    signingConfigs {
        release {
            storeFile file("../../keystore.jks")
            keyAlias "androidappskeystore"
            keyPassword ""
            storePassword ""
        }
    }
    compileSdkVersion 30
    defaultConfig {
        buildToolsVersion "30.0.2"
        applicationId = "com.sergiocruz.MatematicaPro"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 24
        versionName "4.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            useProguard true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }
    productFlavors {
    }

    // use Java 8 Lambdas
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding.enabled = true

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError true
        enable 'StopShip'
        error 'StopShip'
    }

}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    testImplementation('junit:junit:4.13')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0', {
        exclude group: "com.android.support", module: "support-annotations"
    })

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.0.10")

    implementation('com.google.android.material:material:1.2.1')

    // Constraint layout
    implementation("androidx.constraintlayout:constraintlayout:2.0.1")
    implementation("androidx.constraintlayout:constraintlayout-solver:2.0.1")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation("androidx.appcompat:appcompat:1.2.0")
    implementation("androidx.recyclerview:recyclerview:1.1.0")
    implementation("androidx.cardview:cardview:1.0.0")
    implementation("androidx.gridlayout:gridlayout:1.0.0")
    implementation("androidx.vectordrawable:vectordrawable:1.1.0")
    implementation("androidx.preference:preference:1.1.1")
    implementation("androidx.fragment:fragment-ktx:1.2.5")


    // Coroutines
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9-native-mt')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9-native-mt')

    implementation("com.google.android.gms:play-services-location:17.0.0")

    // Timber logging
    implementation("com.jakewharton.timber:timber:4.7.1")

    implementation("com.google.code.gson:gson:2.8.6")


    implementation("com.google.firebase:firebase-analytics:17.5.0")    // Recommended: Firebase SDK for Google Analytics.
    implementation("com.google.firebase:firebase-crashlytics:17.2.1")    // Firebase Crashlytics SDK.

    // Glide image loading library
    implementation("com.github.bumptech.glide:glide:4.11.0")

    def multidex_version = "2.0.1"
    implementation("androidx.multidex:multidex:$multidex_version")

}

repositories {
    mavenCentral()
}